(define (let? exp)
  (eq? (car exp) 'let))
(define (let-parameters exp)
  (cadr exp))
(define (let-body exp)
  (caddr exp))
(define (let->combination exp)
  (let ((parameters (let-parameters exp))
        (body (let-body exp)))
    (cons (make-lambda (map car parameters)
                       body)
          (map cadr parameters))))
