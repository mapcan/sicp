;(define (fast-expt b n)
;  (if (even? n)
;    (fast-expt-iter b n)
;    (* b (fast-expt-iter b (- n 1)))))
;(define (fast-expt-iter b n)
;  (if (= n 1)
;    b
;    (fast-expt-iter (square b) (/ n 2))))

(define (fast-expt b n)
  (define (fast-expt-iter b n)
    (define (square n)
      (* n n))
    (cond ((< n 1) 1)
          ((= n 1) b)
          (else (if (even? n)
                  (fast-expt-iter (square b) (/ n 2))
                  (* b (fast-expt-iter b (- n 1)))))))
  (fast-expt-iter b n))
